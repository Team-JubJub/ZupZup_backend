plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

subprojects {   // Applied to application-common, seller, customer
    group = 'zupzup'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    dependencies {
        implementation(project(":spring-module-common"))
        implementation 'org.springframework.boot:spring-boot-starter-webflux'   // WebClient 의존성 주입
        // swagger
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
        //spring security
        implementation("org.springframework.boot:spring-boot-starter-security")
        implementation("org.springframework.security:spring-security-test")
        //jwt
        implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
        runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

        //javax
        // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
        implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
        // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-core
        implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
        // https://mvnrepository.com/artifact/com.sun.xml.bind/jaxb-impl
        implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.1'

        // For apple ES256
        implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
        implementation group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: '1.72'
        implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.30.1'
        //cache
        implementation("org.springframework.boot:spring-boot-starter-cache")
        //pageable
        implementation("org.springframework.boot:spring-boot-starter-web")
    }
}
project(':application-module:application-common') {
    dependencies {
        implementation(project(":spring-module-common"))
    }
    bootJar {	// 단독으로 실행되지 않으므로, 해당 모듈 라이브러리화 필요
        enabled = false
    }
    jar {	// 단독으로 실행되지 않으므로, 해당 모듈 라이브러리화 필요
        enabled = true
    }
}
project(':application-module:customer') {
    dependencies {
        implementation(project(":application-module:application-common"))
    }
}
project(':application-module:seller') {
    dependencies {
        implementation(project(":application-module:application-common"))
    }
}
