plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'zupzup'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootJar {	// 단독으로 실행되지 않으므로, 해당 모듈 라이브러리화 필요
	enabled = false
}
jar {	// 단독으로 실행되지 않으므로, 해당 모듈 라이브러리화 필요
	enabled = true
}

subprojects {	// 모든 하위 모듈에 적용되는 setting
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'zupzup'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	repositories{
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-jdbc'
		implementation 'org.modelmapper:modelmapper:3.1.1'
		implementation 'org.jetbrains:annotations:23.1.0'
		implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
		implementation 'org.projectlombok:lombok:1.18.20'

		//runtimeOnly 'com.h2database:h2'
		//implementation 'mysql:mysql-connector-java'

		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'junit:junit:4.13.2'

		// Redis
		implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '3.0.0'

		// Mac OS -> 소셜 로그인 구현 중 네이버에 access, refresh 토큰 요청 때 에러가 나 추가한 의존성
		// 참고: https://junho85.pe.kr/2054
		implementation 'io.netty:netty-resolver-dns-native-macos'
	}

	test {
		useJUnitPlatform()
	}
}
project(':core-module') {	// 공통 코드 모듈
	bootJar {	// 단독으로 실행되지 않으므로, 해당 모듈 라이브러리화 필요
		enabled = false
	}
	jar {	// 단독으로 실행되지 않으므로, 해당 모듈 라이브러리화 필요
		enabled = true
	}
}
project(':domain-module') {	// domain 모듈
	dependencies {
		implementation(project(":core-module"))
	}
	bootJar {	// 단독으로 실행되지 않으므로, 해당 모듈 라이브러리화 필요
		enabled = false
	}
	jar {	// 단독으로 실행되지 않으므로, 해당 모듈 라이브러리화 필요
		enabled = true
	}
}
project(':application-module') {	// 어플리케이션(사장님, 고객님) 모듈
	dependencies {
		implementation(project(":core-module"))
		implementation(project(":domain-module"))
	}
	bootJar {	// 단독으로 실행되지 않으므로, 해당 모듈 라이브러리화 필요
		enabled = false
	}
	jar {	// 단독으로 실행되지 않으므로, 해당 모듈 라이브러리화 필요
		enabled = true
	}
}
